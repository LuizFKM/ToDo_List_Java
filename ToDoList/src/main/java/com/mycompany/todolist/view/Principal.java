/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.todolist.view;

import com.mycompany.todolist.controller.ControllerTarefa;
import com.mycompany.todolist.controller.ControllerUsuario;
import com.mycompany.todolist.model.Tarefa;
import com.mycompany.todolist.model.Usuario;
import com.mycompany.todolist.util.InicializarComponentes;
import com.mycompany.todolist.util.ValidaCampos;
import java.awt.Color;
import java.awt.event.FocusAdapter;
import java.awt.event.FocusEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import javax.swing.JOptionPane;
import javax.swing.border.LineBorder;

/**
 *
 * @author User
 */
public class Principal extends javax.swing.JFrame {
    private Usuario user;
    private ControllerUsuario userController = new ControllerUsuario();
    
    private final String TITULO_TAREFA = "Digite o título da tarefa";
    private final String DESCRICAO_TAREFA = "Descrição da tarefa";
    
    private int index = -1;
    private ControllerTarefa tarefaController = new ControllerTarefa();
    private ValidaCampos validaCampos = new ValidaCampos();
    
    public Principal() {
        initComponents();
        configuraCampos();
        configurarListeners();
        setLocationRelativeTo(this);
    }
    
    public Principal(Usuario user) {
        initComponents();
        this.user = user;
        configuraCampos();
        mostrarUsuario();
        configurarListeners();
        selecionarTarefa();
        setLocationRelativeTo(this);
    }
    
   private void mostrarUsuario(){
       lblEmail.setText(user.getEmail());
       lblNome.setText(user.getNomeCompleto());
   }
   
   private void configurarListeners() {
        ftdData.addFocusListener(new FocusAdapter() {
            
            public void focusLost(FocusEvent e) {
                validaCampos.validaFormattedField(ftdData, "  /  /    ");
            }
        });
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rdbGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTitulo = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDescricao = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblListaTarefas = new javax.swing.JTable();
        btnSalvarTarefa = new javax.swing.JButton();
        btnLimparCampos = new javax.swing.JButton();
        rdbConcluida = new javax.swing.JRadioButton();
        btnExcluir = new javax.swing.JButton();
        btnSair = new javax.swing.JButton();
        ftdData = new javax.swing.JFormattedTextField();
        lblNome = new javax.swing.JLabel();
        lblEmail = new javax.swing.JLabel();
        rdbPendente = new javax.swing.JRadioButton();
        lblError = new javax.swing.JLabel();
        lblErroData = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(249, 250, 248));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Lista de Tarefas");

        txtTitulo.setBackground(new java.awt.Color(249, 250, 248));
        txtTitulo.setBorder(javax.swing.BorderFactory.createTitledBorder("Título"));

        txtDescricao.setBackground(new java.awt.Color(249, 250, 248));
        txtDescricao.setColumns(20);
        txtDescricao.setRows(5);
        jScrollPane1.setViewportView(txtDescricao);

        tblListaTarefas.setBackground(new java.awt.Color(249, 250, 248));
        tblListaTarefas.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        tblListaTarefas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Título", "Descricao", "Data", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblListaTarefas);
        if (tblListaTarefas.getColumnModel().getColumnCount() > 0) {
            tblListaTarefas.getColumnModel().getColumn(0).setResizable(false);
            tblListaTarefas.getColumnModel().getColumn(1).setResizable(false);
            tblListaTarefas.getColumnModel().getColumn(2).setResizable(false);
            tblListaTarefas.getColumnModel().getColumn(3).setResizable(false);
        }

        btnSalvarTarefa.setBackground(new java.awt.Color(249, 250, 248));
        btnSalvarTarefa.setText("Salvar");
        btnSalvarTarefa.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSalvarTarefa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarTarefaActionPerformed(evt);
            }
        });

        btnLimparCampos.setBackground(new java.awt.Color(249, 250, 248));
        btnLimparCampos.setText("Limpar");
        btnLimparCampos.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnLimparCampos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparCamposActionPerformed(evt);
            }
        });

        rdbConcluida.setBackground(new java.awt.Color(249, 250, 248));
        rdbGroup.add(rdbConcluida);
        rdbConcluida.setText("Concluida");
        rdbConcluida.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rdbConcluidaMouseClicked(evt);
            }
        });

        btnExcluir.setBackground(new java.awt.Color(249, 250, 248));
        btnExcluir.setText("Excluir");
        btnExcluir.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSair.setBackground(new java.awt.Color(249, 250, 248));
        btnSair.setText("SAIR");
        btnSair.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairActionPerformed(evt);
            }
        });

        ftdData.setBackground(new java.awt.Color(249, 250, 248));
        ftdData.setBorder(javax.swing.BorderFactory.createTitledBorder("Data"));
        try {
            ftdData.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        rdbPendente.setBackground(new java.awt.Color(249, 250, 248));
        rdbGroup.add(rdbPendente);
        rdbPendente.setText("Pendente");

        lblError.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        lblErroData.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        jLabel2.setText("Email");

        jLabel3.setText("User");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(264, 264, 264)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(rdbConcluida, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(rdbPendente))
                            .addComponent(txtTitulo)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 469, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnSalvarTarefa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLimparCampos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ftdData)
                            .addComponent(btnExcluir, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                            .addComponent(btnSair, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addComponent(lblErroData))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(lblError))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblNome)
                                    .addComponent(jLabel3))
                                .addGap(115, 115, 115)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(lblEmail))))))
                .addGap(314, 314, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ftdData, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                        .addComponent(lblErroData))
                    .addComponent(txtTitulo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSalvarTarefa, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblError))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimparCampos, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rdbConcluida)
                            .addComponent(btnSair)
                            .addComponent(lblEmail)
                            .addComponent(lblNome)
                            .addComponent(rdbPendente))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 319, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairActionPerformed
        userController.addUsuario(user);
        new Login(userController.getListaDeUsuarios()).setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnSairActionPerformed

    private void btnLimparCamposActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparCamposActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnLimparCamposActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        tarefaController.excluirTarefa(index);
        tarefaController.atualizaTabela(tblListaTarefas);
        limparCampos();
        index = -1;
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSalvarTarefaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarTarefaActionPerformed
    
        
        if(validaCampos()) {
            lblError.setText("");
            lblErroData.setText("");
        try {
            
            Tarefa t = retornaTarefa(); 
            tarefaController.addTarefa(t);
            tarefaController.atualizaTabela(tblListaTarefas);
            limparCampos();
        } catch (DateTimeParseException ex) {
            ftdData.setBorder(new LineBorder(Color.RED, 2));
            lblErroData.setForeground(Color.red);
            lblErroData.setText("Coloque uma data válida");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    } else {
        lblError.setForeground(Color.red);
        lblError.setText("Preencha todos os campos!");
    }

    }//GEN-LAST:event_btnSalvarTarefaActionPerformed

    private void rdbConcluidaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rdbConcluidaMouseClicked

    }//GEN-LAST:event_rdbConcluidaMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimparCampos;
    private javax.swing.JButton btnSair;
    private javax.swing.JButton btnSalvarTarefa;
    private javax.swing.JFormattedTextField ftdData;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblErroData;
    private javax.swing.JLabel lblError;
    private javax.swing.JLabel lblNome;
    private javax.swing.JRadioButton rdbConcluida;
    private javax.swing.ButtonGroup rdbGroup;
    private javax.swing.JRadioButton rdbPendente;
    private javax.swing.JTable tblListaTarefas;
    private javax.swing.JTextArea txtDescricao;
    private javax.swing.JTextField txtTitulo;
    // End of variables declaration//GEN-END:variables
    
    private void configuraCampos(){
        InicializarComponentes ic = new InicializarComponentes();
        
        ic.configuraTextField(txtTitulo, TITULO_TAREFA);
        ic.configuraTextArea(txtDescricao, DESCRICAO_TAREFA);
    }
    
    private boolean validaCampos(){
       boolean resultado = true;
   
       
       if(validaCampos.validaTextField(txtTitulo, TITULO_TAREFA)) resultado = false;
       if(validaCampos.validaTextArea(txtDescricao, DESCRICAO_TAREFA)) resultado = false;
       

       return resultado;
   }
    
    private Tarefa retornaTarefa(){
        String titulo = txtTitulo.getText();
        String descricao = txtDescricao.getText();
        String status;
        
        if (rdbConcluida.isSelected()){
            status = "Concluida";
        }else {
            status = "Pendente";
        }
        
        String data = ftdData.getText();
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        LocalDate dataFormatada = LocalDate.parse(data, dtf);
        
        
        
        Tarefa t = new Tarefa();
        t.setTitulo(titulo);
        t.setDescricao(descricao);
        t.setData(dataFormatada);
        t.setIsConcluida(status);
        
        return t;
    }
    
    private void limparCampos(){
        txtTitulo.setText("");
        txtTitulo.requestFocus();
        txtDescricao.setText("");
        ftdData.setText("");
        rdbGroup.clearSelection();
    }
    
    private void selecionarTarefa(){
        tblListaTarefas.addMouseListener(new MouseAdapter(){
            public void mouseClicked(MouseEvent e){
                index = tblListaTarefas.getSelectedRow();
                if(index >= 0){
                    recuperaTarefa(index);
                    
                }
            }
        });
        
    }
    
    private void recuperaTarefa(int index){
        Tarefa t = tarefaController.getTarefa(index);
        
        txtTitulo.setText(t.getTitulo());
        txtDescricao.setText(t.getDescricao());
        if(t.getIsConcluida().equals("Concluida")){
            rdbConcluida.setSelected(true);
        }else{
            rdbPendente.setSelected(true);
        }
        
        DateTimeFormatter dtf = DateTimeFormatter.ofPattern("dd/MM/yyyy");
        String dataFormatada = t.getData().format(dtf);
        ftdData.setText(dataFormatada);
        
    }
}
